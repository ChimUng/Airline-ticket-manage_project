// üõ† Khai b√°o bi·∫øn to√†n c·ª•c
let deleteAirportId = null;

// üîπ Danh s√°ch th√†nh ph·ªë tƒ©nh
const cities = [
    { value: "H√† N·ªôi", label: "H√† N·ªôi" },
    { value: "TP. H·ªì Ch√≠ Minh", label: "TP. H·ªì Ch√≠ Minh" },
    { value: "ƒê√† N·∫µng", label: "ƒê√† N·∫µng" },
    { value: "H·∫£i Ph√≤ng", label: "H·∫£i Ph√≤ng" },
    { value: "C·∫ßn Th∆°", label: "C·∫ßn Th∆°" },
    { value: "Nha Trang", label: "Nha Trang" },
    { value: "Ph√∫ Qu·ªëc", label: "Ph√∫ Qu·ªëc" },
    { value: "Hu·∫ø", label: "Hu·∫ø" },
    { value: "ƒê√† L·∫°t", label: "ƒê√† L·∫°t" },
    { value: "Vinh", label: "Vinh" },
    { value: "Kh√°nh H√≤a", label: "Kh√°nh H√≤a" }
];

// üîπ 1Ô∏è‚É£ H√†m hi·ªÉn th·ªã th√¥ng b√°o b·∫±ng modal
function showNotification(message, type = "success") {
    const modal = $("#notificationModal");
    const modalBody = $("#notificationMessage");
    const modalTitle = $("#notificationModalLabel");
    
    // X√≥a t·∫•t c·∫£ c√°c l·ªõp alert tr∆∞·ªõc khi th√™m m·ªõi
    modalBody.removeClass("alert-success alert-danger");
    
    // ƒê·∫∑t n·ªôi dung th√¥ng b√°o
    modalBody.text(message);
    
    // ƒê·∫∑t ti√™u ƒë·ªÅ v√† m√†u s·∫Øc theo lo·∫°i th√¥ng b√°o
    if (type === "success") {
        modalTitle.text("Th√†nh c√¥ng");
        modalBody.addClass("alert alert-success");
    } else {
        modalTitle.text("L·ªói");
        modalBody.addClass("alert alert-danger");
    }
    
    // Hi·ªÉn th·ªã modal
    modal.modal("show");
    
    // T·ª± ƒë·ªông ƒë√≥ng sau 3 gi√¢y n·∫øu l√† th√¥ng b√°o th√†nh c√¥ng
    if (type === "success") {
        setTimeout(() => {
            modal.modal("hide");
        }, 3000);
    }
}

// üîπ 2Ô∏è‚É£ H√†m kh·ªüi t·∫°o danh s√°ch s√¢n bay v·ªõi ph√¢n trang, l·ªçc, t√¨m ki·∫øm, s·∫Øp x·∫øp
(function($) {
    function initAirportList(options) {
        let currentPage = options.currentPage || 1;
        let currentSort = options.currentSort || 'airport_id';
        let currentOrder = options.currentOrder || 'ASC';
        let totalPages = options.totalPages || 1;

        window.loadAirports = function(page) {
            const status = $('#statusFilter').val(); // L·∫•y gi√° tr·ªã t·ª´ dropdown
            const search = $('#searchInput').val().trim(); // Lo·∫°i b·ªè kho·∫£ng tr·∫Øng th·ª´a

            // Ki·ªÉm tra gi√° tr·ªã status
            if (status !== '' && status !== '0' && status !== '1') {
                showNotification("Gi√° tr·ªã tr·∫°ng th√°i kh√¥ng h·ª£p l·ªá!", "error");
                return;
            }

            // C·∫≠p nh·∫≠t URL
            const url = new URL(window.location);
            url.searchParams.set('page', page);
            url.searchParams.set('status', status);
            url.searchParams.set('search', search);
            url.searchParams.set('sort', currentSort);
            url.searchParams.set('order', currentOrder);
            window.history.pushState({}, '', url);

            // Hi·ªÉn th·ªã spinner
            $('#airportTableBody').html('<tr><td colspan="6" class="text-center"><div class="spinner-border text-primary" role="status"><span class="visually-hidden">Loading...</span></div></td></tr>');

            $.ajax({
                url: '/banvemaybay/Admin/quantri/layout/include/airport_logic.php',
                method: 'GET',
                data: {
                    page: page,
                    status: status,
                    search: search,
                    sort: currentSort,
                    order: currentOrder
                },
                dataType: 'json',
                success: function(response) {
                    console.log('Response:', response);
                    if (response.success) {
                        $('#airportTableBody').html(response.html);
                        $('#paginationContainer').html(response.pagination);
                        currentPage = page;
                        totalPages = response.totalPages;
                        console.log('Total Items:', response.debug_totalItems);
                        console.log('Airports:', response.debug_airports);
                    } else {
                        showNotification('L·ªói: ' + (response.error || 'Kh√¥ng th·ªÉ t·∫£i d·ªØ li·ªáu') + '\nDebug Query: ' + (response.debug_query || 'N/A') + '\nDebug Query Main: ' + (response.debug_query_main || 'N/A') + '\nDebug Airports: ' + JSON.stringify(response.debug_airports || []) + '\nTotal Items: ' + (response.debug_totalItems || 'N/A'), 'error');
                    }
                },
                error: function(xhr) {
                    console.error('AJAX Error:', xhr.status, xhr.statusText, xhr.responseText);
                    showNotification('L·ªói h·ªá th·ªëng: ' + xhr.statusText + ' (M√£ l·ªói: ' + xhr.status + ')\nResponse: ' + xhr.responseText, 'error');
                }
            });
        };

        // X·ª≠ l√Ω l·ªçc
        $('#statusFilter').on('change', function() {
            loadAirports(1);
        });

        // X·ª≠ l√Ω t√¨m ki·∫øm
        $('#searchInput').on('keypress', function(e) {
            if (e.key === 'Enter') {
                loadAirports(1);
            }
        });

        // X·ª≠ l√Ω ph√¢n trang
        $(document).on('click', '.pagination a[data-page]', function(e) {
            e.preventDefault();
            const page = $(this).data('page');
            if (page > 0 && page <= totalPages) {
                loadAirports(page);
            }
        });

        // X·ª≠ l√Ω s·∫Øp x·∫øp
        $(document).on('click', '.sort-link', function(e) {
            e.preventDefault();
            const sort = $(this).data('sort');
            if (sort === currentSort) {
                currentOrder = currentOrder === 'ASC' ? 'DESC' : 'ASC';
            } else {
                currentSort = sort;
                currentOrder = 'ASC';
            }
            loadAirports(currentPage);
        });

        // Load trang ƒë·∫ßu ti√™n khi kh·ªüi t·∫°o
        loadAirports(currentPage);
    }

    // ƒêƒÉng k√Ω h√†m ƒë·ªÉ c√≥ th·ªÉ g·ªçi t·ª´ b√™n ngo√†i
    window.initAirportList = initAirportList;
})(jQuery);

// üîπ 3Ô∏è‚É£ H√†m t·∫£i danh s√°ch th√†nh ph·ªë cho dropdown
function loadCitiesForDropdown(citySelector, selectedCity = null) {
    const cityDropdown = $(citySelector);

    // X√≥a c√°c option c≈© (tr·ª´ placeholder)
    cityDropdown.find('option:not(:first)').remove();

    // Th√™m c√°c th√†nh ph·ªë v√†o dropdown
    cities.forEach(city => {
        cityDropdown.append(`<option value="${city.value}">${city.label}</option>`);
    });

    // ƒê·∫∑t gi√° tr·ªã ƒë√£ ch·ªçn (n·∫øu c√≥)
    if (selectedCity) {
        cityDropdown.val(selectedCity);
    }
}

// üîπ 3Ô∏è‚É£ H√†m th√™m s√¢n bay
function addAirport(event) {
    event.preventDefault();
    console.log("üõ† N√∫t T·∫°o m·ªõi ƒë∆∞·ª£c nh·∫•n!");

    let formData = {
        action: "add",
        IATA: document.getElementById("IATA").value.trim().toUpperCase(),
        name_airport: document.getElementById("name_airport").value.trim(),
        city: document.getElementById("city").value,
        status_airport: document.getElementById("status_airport").value
    };

    console.log("formData:", formData);

    if (!formData.IATA || !formData.name_airport || !formData.city || !formData.status_airport) {
        showNotification("Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß th√¥ng tin.", "error");
        return;
    }

    // let statusText = formData.status_airport === "1" ? "active" : "inactive";
    // formData.status_airport = statusText;

    fetch("/banvemaybay/Admin/quantri/layout/include/handle_airport.php", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(formData)
    })
    .then(response => {
        if (!response.ok) {
            throw new Error(`L·ªói HTTP: ${response.status} - ${response.statusText}`);
        }
        return response.json();
    })
    .then(data => {
        showNotification(data.message || (data.success ? "Th√™m m·ªõi s√¢n bay th√†nh c√¥ng!" : "L·ªói kh√¥ng x√°c ƒë·ªãnh"), data.success ? "success" : "error");
        if (data.success) {
            document.getElementById("add-airport-form").reset();
            if (typeof loadAirports === 'function') {
                loadAirports(1);
            } else {
                console.warn("loadAirports kh√¥ng ƒë∆∞·ª£c ƒë·ªãnh nghƒ©a. Chuy·ªÉn h∆∞·ªõng v·ªÅ danh s√°ch s√¢n bay.");
                setTimeout(() => {
                    window.location.href = '/banvemaybay/Admin/quantri/layout/listairport.php';
                }, 2000);
            }
        }
    })
    .catch(error => {
        console.error("L·ªói Fetch API:", error);
        showNotification("L·ªói: " + error.message, "error");
    });
}

// üîπ 3Ô∏è‚É£ H√†m x√≥a s√¢n bay
function deleteAirport(id) {
    deleteAirportId = id;
    console.log("üóë X√°c nh·∫≠n x√≥a s√¢n bay ID:", deleteAirportId);
    $("#confirmDeleteModal").modal("show");
}

function confirmDeleteAirport() {
    if (!deleteAirportId) {
        showNotification("L·ªói: Kh√¥ng t√¨m th·∫•y ID s√¢n bay c·∫ßn x√≥a.", "error");
        return;
    }

    fetch("/banvemaybay/Admin/quantri/layout/include/handle_airport.php", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ action: "delete", id: deleteAirportId })
    })
        .then(response => response.json())
        .then(data => {
            showNotification(data.success ? "X√≥a th√†nh c√¥ng!" : "L·ªói: " + data.message, data.success ? "success" : "error");
            if (data.success) {
                loadAirports(1); // T·∫£i l·∫°i danh s√°ch t·ª´ trang 1
            }
        })
        .catch(error => {
            console.error("L·ªói Fetch API:", error);
            showNotification("L·ªói k·∫øt n·ªëi ƒë·∫øn server!", "error");
        });

    $("#confirmDeleteModal").modal("hide");
}

// üîπ 4Ô∏è‚É£ H√†m ch·ªânh s·ª≠a s√¢n bay
function editAirport(id) {
    fetch("/banvemaybay/Admin/quantri/layout/include/handle_airport.php", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ action: "get", id })
    })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                $("#edit-id").val(data.airport.airport_id || '');
                $("#edit-IATA").val(data.airport.IATA_code_airport || '');
                $("#edit-name").val(data.airport.airport_name || '');
                loadCitiesForDropdown("#edit-city", data.airport.city);
                $("#edit-status").val(data.airport.status_airport || '');
                $("#editModal").modal("show");
            } else {
                showNotification("L·ªói: " + data.message, "error");
            }
        })
        .catch(error => {
            console.error("L·ªói Fetch API:", error);
            showNotification("L·ªói k·∫øt n·ªëi ƒë·∫øn server!", "error");
        });
}

// üîπ 6Ô∏è‚É£ Ch·∫°y khi t√†i li·ªáu s·∫µn s√†ng
// document.addEventListener("DOMContentLoaded", function () {
//     console.log("‚úÖ JavaScript(main.js) ƒë√£ t·∫£i xong!");
//     loadAirportList(); // T·∫£i danh s√°ch s√¢n bay l·∫ßn ƒë·∫ßu
// });

// th√™m v√¥ sau n√®
$(document).ready(function() {
    console.log("‚úÖ JavaScript(main.js) ƒë√£ t·∫£i xong!");

    // X·ª≠ l√Ω khi nh·∫•n n√∫t x√°c nh·∫≠n x√≥a
    $('#confirmDeleteBtn').click(function() {
        confirmDeleteAirport();
    });

    // X·ª≠ l√Ω khi nh·∫•n n√∫t h·ªßy ho·∫∑c n√∫t X trong modal x√≥a
    $('#confirmDeleteModal').on('hidden.bs.modal', function() {
        deleteAirportId = null;
    });

    // X·ª≠ l√Ω khi nh·∫•n n√∫t "L∆∞u thay ƒë·ªïi" trong modal ch·ªânh s·ª≠a
    $('#saveChangesBtn').click(function() {
        const formData = {
            action: "update",
            id: $('#edit-id').val(),
            IATA: $('#edit-IATA').val().trim().toUpperCase(),
            name_airport: $('#edit-name').val().trim(),
            city: $('#edit-city').val().trim(),
            status_airport: $('#edit-status').val()
        };

        // Ki·ªÉm tra d·ªØ li·ªáu b·∫Øt bu·ªôc
        if (!formData.id || !formData.IATA || !formData.name_airport || !formData.city || formData.status_airport === '') {
            showNotification("Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß c√°c tr∆∞·ªùng b·∫Øt bu·ªôc!", "error");
            return;
        }

        // Ki·ªÉm tra ƒë·ªô d√†i m√£ IATA
        if (formData.IATA.length !== 3) {
            showNotification("M√£ IATA ph·∫£i c√≥ ƒë√∫ng 3 k√Ω t·ª±!", "error");
            return;
        }

        // let statusText = formData.status_airport === "1" ? "active" : "inactive";
        // formData.status_airport = statusText;

        fetch("/banvemaybay/Admin/quantri/layout/include/handle_airport.php", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(formData)
        })
            .then(response => response.json())
            .then(data => {
                showNotification(data.success ? "C·∫≠p nh·∫≠t th√†nh c√¥ng!" : "L·ªói: " + data.message, data.success ? "success" : "error");
                if (data.success) {
                    $('#editModal').modal('hide');
                    loadAirports(1); // T·∫£i l·∫°i danh s√°ch t·ª´ trang 1
                }
            })
            .catch(error => {
                console.error("L·ªói Fetch API:", error);
                showNotification("L·ªói k·∫øt n·ªëi ƒë·∫øn server!", "error");
            });
    });

    // X·ª≠ l√Ω khi nh·∫•n n√∫t h·ªßy ho·∫∑c n√∫t X trong modal ch·ªânh s·ª≠a
    $('#editModal').on('hidden.bs.modal', function() {
        $('#edit-form')[0].reset();
    });

    // G√°n s·ª± ki·ªán cho c√°c n√∫t "S·ª≠a" v√† "X√≥a" (v√¨ c√°c n√∫t n√†y ƒë∆∞·ª£c t·∫°o ƒë·ªông)
    $(document).on('click', '.view-detail-btn', function() {
        const airportId = $(this).data('airport-id');
        editAirport(airportId);
    });

    $(document).on('click', '.cancel-btn', function() {
        const airportId = $(this).data('airport-id');
        deleteAirport(airportId);
    });
});